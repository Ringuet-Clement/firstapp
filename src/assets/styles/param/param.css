.Param_List {
     position: absolute;
     top: 50%;
     left: 50%;
     transform: translate(-50%, -50%);
     height: 55vh;
     width: 60vw;
     background-color: var(--dark_red-color);
     display: none;
     border-radius: 15px;
     padding: 20px;
     font-family: 'Montserrat', sans-serif;
}

.Param_List.active {
     display: flex;
     flex-direction: column;
     gap: 2%;
}

.background_image {
     top: 0;
     left: 0;
     position: fixed;
     width: 100vw;
     height: 100vh;
     background-size: cover;
     background-position: center;
     background-repeat: no-repeat;
}

.Background_settings {
     display: flex;
     flex-direction: row;
     gap: 5px;
}

.fileUploadWrapper {
     width: fit-content;
     height: 100%;
     display: flex;
     align-items: center;
     justify-content: center;
     font-family: Arial, Helvetica, sans-serif;
}

#file {
     display: none;
}

.fileUploadWrapper label {
     cursor: pointer;
     width: fit-content;
     height: fit-content;
     display: flex;
     align-items: center;
     justify-content: center;
     position: relative;
}

.fileUploadWrapper label svg {
     height: 18px;
}

.fileUploadWrapper label svg path {
     transition: all 0.3s;
}

.fileUploadWrapper label svg circle {
     transition: all 0.3s;
}

.fileUploadWrapper label:hover svg path {
     stroke: #fff;
}

.fileUploadWrapper label:hover svg circle {
     stroke: #fff;
     fill: #3c3c3c;
}

.fileUploadWrapper label:hover .tooltip {
     display: block;
     opacity: 1;
}

.tooltip {
     position: absolute;
     top: -40px;
     display: none;
     opacity: 0;
     color: white;
     font-size: 10px;
     text-wrap: nowrap;
     background-color: #000;
     padding: 6px 10px;
     border: 1px solid #3c3c3c;
     border-radius: 5px;
     box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.596);
     transition: all 0.3s;
}

.language_settings {
     display: flex;
     flex-direction: row;
     gap: 15px;
}


.container_language {
     --s: 1em;
     --g: 10px;
     --c: #009688;

     display: grid;
     grid-auto-rows: 1fr;
     gap: var(--g);
     position: relative;
}

.container_language:before {
     content: "";
     position: absolute;
     height: calc(var(--s) / 2);
     left: calc(var(--s) / 4 + var(--_x, 0px));
     top: calc(var(--s) / 4);
     background: var(--c);
     border-radius: 50%;
     aspect-ratio: 1;
     transition: 0.4s, left cubic-bezier(0.1, -2000, 0.7, -2000) 0.4s;
}

.container_language label {
     display: inline-flex;
     line-height: var(--s);
     align-items: center;
     gap: 10px;
     cursor: pointer;
}

.container_language input {
     height: var(--s);
     aspect-ratio: 1;
     border: calc(var(--s) / 8) solid var(--_c, #939393);
     border-radius: 50%;
     outline-offset: calc(var(--s) / 10);
     padding: calc(var(--s) / 8);
     -webkit-appearance: none;
     -moz-appearance: none;
     appearance: none;
     cursor: pointer;
     font-size: inherit;
     margin: 0;
     transition: 0.3s;
}

.container_language input:checked {
     --_c: var(--c);
}

.container_language:not(:has(input:checked)):before {
     --_i: -1;
     opacity: 0;
}

.container_language:has(input:checked):before {
     opacity: 1;
     transform: translateY(calc(var(--_i) * (var(--s) + var(--g))));
}

.container_language:has(label:nth-child(1) input:checked):before {
     --_i: 0;
     --_x: 0.02px;
}

.container_language:has(label:nth-child(2) input:checked):before {
     --_i: 1;
     --_x: 0.04px;
}

.container_language:has(label:nth-child(3) input:checked):before {
     --_i: 2;
     --_x: 0.06px;
}

.container_language:has(label:nth-child(4) input:checked):before {
     --_i: 3;
     --_x: 0.08px;
}

.container_language:has(label:nth-child(5) input:checked):before {
     --_i: 4;
     --_x: 0.1px;
}

/* and so on ..*/

.container_language input:disabled {
     background: linear-gradient(#939393 0 0) 50%/100% 20% no-repeat content-box;
     opacity: 0.5;
     cursor: not-allowed;
}

@media print {
     input[type="radio"] {
          -webkit-appearance: auto;
          -moz-appearance: auto;
          appearance: auto;
          background: none;
     }
}

@supports not selector(:has(*)) {
     .container_language:before {
          display: none;
     }

     .container_language input:checked {
          --_c: var(--c);
          background: var(--c) content-box;
     }
}